{"version":3,"file":"facephi-selphid.js.map","sources":["ng://facephi-selphid/lib/services/helpers/rxjs-helper.ts","ng://facephi-selphid/lib/services/fphi-selphid-widget.service.ts","ng://facephi-selphid/lib/models/facephi-selphid-configuration.ts","ng://facephi-selphid/lib/components/facephi-selphid/facephi-selphid.component.ts","ng://facephi-selphid/lib/models/facephi-selphid-constants.ts","ng://facephi-selphid/lib/facephi-selphid.module.ts"],"sourcesContent":["import { timer } from \"rxjs/index\";\n\nexport class RxjsHelper {\n\n    /**\n     * Encapsula una rutina de chequeo de una condiciÃ³n hasta que Ã©sta se cumpla.\n     * @param pollTime Intervalo de chequeo (en ms).\n     * @param evalFunc FunciÃ³n para evaluar la condiciÃ³n deseada.\n     * @param successFunc FunciÃ³n a invocar cuando la condiciÃ³n se cumpla.\n     * @param delayTime Tiempo de retardo para iniciar el proceso de chequeo. Por defecto 0ms.\n     */\n    public static poll(pollTime: number,\n                       evalFunc: any,\n                       successFunc: any,\n                       delayTime: number = 0) {\n        const subscription = timer(delayTime, pollTime)\n            .subscribe(\n                () => {\n                    if (!evalFunc())\n                        return;\n\n                    subscription.unsubscribe();\n                    successFunc();\n                }\n            );\n    }\n}\n","import { Injectable, Inject } from \"@angular/core\";\nimport { Renderer2, RendererFactory2 } from \"@angular/core\";\nimport { DOCUMENT } from \"@angular/common\";\nimport { HttpClient, HttpResponse } from \"@angular/common/http\";\n\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { RxjsHelper } from \"./helpers/rxjs-helper\";\n\nimport { FPhiSelphIdConfiguration } from \"../models/facephi-selphid-configuration\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class FPhiSelphIdWidgetService {\n\n    // #region \"Atributos\"\n\n    private static readonly licenseCheckUrl: string = \"https://ecertic.idcapture.es/auth\";\n\n    private _renderer: Renderer2;\n\n    private _assetsBasePath: string;\n    private _fPhiWidgetConfiguration: FPhiSelphIdConfiguration;\n    private _fPhiWidget: any;\n\n    // #endregion\n\n    // #region \"Propiedades\"\n\n    private get fPhiSelphIdNamespace() { return window[\"FPhi\"] && window[\"FPhi\"].SelphID ? window[\"FPhi\"].SelphID : undefined; }\n\n    private set fPhiSelphIdNamespace(value: any) {\n        if (window[\"FPhi\"])\n            window[\"FPhi\"].SelphID = value;\n    }\n\n    private get fPhiWidgetScriptPath(): string { return `${this._assetsBasePath}/FPhi.Widget.wasm.js`; }\n\n    // #endregion\n\n    // #region \"Constructores\"\n\n    constructor(\n        @Inject(DOCUMENT) private document: any,\n        private rendererFactory: RendererFactory2,\n        private http: HttpClient\n    ) {\n        this._renderer = this.rendererFactory.createRenderer(null, null);\n    }\n\n    // #endregion\n\n    // #region \"MÃ©todos pÃºblicos\"\n\n    /**\n     * Realiza la carga dinÃ¡mica del recurso javascript del widget web.\n     * @param basePath Ruta base de la carpeta de los ficheros del widget.\n     */\n    public loadControl(basePath: string): Observable<FPhiSelphIdWidgetService> {\n        //console.log(`>>>> FPhiSelphIdWidgetService :: loadControl --> basePath: ${basePath}`);\n        this._assetsBasePath = basePath;\n\n        const fPhiWidgetScript = this._renderer.createElement(\"script\");\n        this._renderer.setAttribute(fPhiWidgetScript, \"src\", this.fPhiWidgetScriptPath);\n        this._renderer.setAttribute(fPhiWidgetScript, \"type\", \"text/javascript\");\n        this._renderer.appendChild(this.document.body, fPhiWidgetScript);\n\n        return new Observable<FPhiSelphIdWidgetService>(subscriber => {\n            RxjsHelper.poll(5,\n                () => this.fPhiSelphIdNamespace !== null && this.fPhiSelphIdNamespace !== undefined && this.fPhiSelphIdNamespace.Widget !== null && this.fPhiSelphIdNamespace.Widget !== undefined,\n                () => subscriber.next(this)\n            );\n        });\n    }\n\n    /**\n     * Elimina los recursos javascript del widget incluidos en el DOM de la pÃ¡gina.\n     */\n    public removeControl(): FPhiSelphIdWidgetService {\n        if (!this._assetsBasePath)\n            return this;\n\n        //console.warn(`>>>> FPhiSelphIdWidgetService :: removeControl(\"${this._assetsBasePath}\")`);\n        delete this._fPhiWidget;\n        delete this._fPhiWidgetConfiguration;\n        delete this.fPhiSelphIdNamespace;\n\n        this._fPhiWidget = undefined;\n        this._fPhiWidgetConfiguration = undefined;\n        this.fPhiSelphIdNamespace = undefined;\n\n        this.document\n            .querySelectorAll(`script[src*=\"${this._assetsBasePath}\"]`)\n            .forEach(element => { element.parentNode.removeChild(element); });\n\n        this.document\n            .querySelectorAll(\"style#FPhi_Widget_style\")\n            .forEach(element => { element.parentNode.removeChild(element); });\n\n        //console.warn(`>>>> FPhiSelphIdWidgetService :: Control removed`);\n\n        return this;\n    }\n\n    /**\n     * Crea una instancia del widget web nativo con los datos de configuraciÃ³n indicados.\n     * @param config Datos de configuraciÃ³n del widget.\n     */\n    public createUserControl(config: FPhiSelphIdConfiguration): FPhiSelphIdWidgetService {\n        //console.warn(\">>>> FPhiSelphIdWidgetService :: createUserControl\", config, config.getNativeConfiguration());\n        //console.log(`widgetContainer.clientWidth: ${config.widgetContainer.clientWidth}`);\n        //console.log(`widgetContainer.clientHeight: ${config.widgetContainer.clientHeight}`);\n        //console.log(`widgetContainer.offsetWidth: ${config.widgetContainer.offsetWidth}`);\n        //console.log(`widgetContainer.offsetHeight: ${config.widgetContainer.offsetHeight}`);\n        //console.log(`widgetContainer.computedStyleWidth: ${window.getComputedStyle(config.widgetContainer).width}`);\n        //console.log(`widgetContainer.computedStyleHeight: ${window.getComputedStyle(config.widgetContainer).height}`);\n\n        this._fPhiWidgetConfiguration = config;\n        this._fPhiWidget = new this.fPhiSelphIdNamespace.Widget(config.getNativeConfiguration());\n        //console.log(this._fPhiSelphIdWidget);\n\n        if (this._fPhiWidgetConfiguration.debugMode !== null && this._fPhiWidgetConfiguration.debugMode !== undefined)\n            this._fPhiWidget.debug = this._fPhiWidgetConfiguration.debugMode;\n\n        //console.log(this._fPhiSelphIdWidget);\n        return this;\n    }\n\n    /**\n     * Inicia el widget.\n     */\n    public startUserControl(): FPhiSelphIdWidgetService {\n        if (this._fPhiWidget) {\n            // console.warn(\">>>> FPhiSelphIdWidgetService :: startUserControl\");\n            this._fPhiWidget.Start();\n        }\n\n        return this;\n    }\n\n    /**\n     * Detiene la ejecuciÃ³n del widget.\n     */\n    public stopUserControl(): FPhiSelphIdWidgetService {\n        if (this._fPhiWidget) {\n            // console.warn(\">>>> FPhiSelphIdWidgetService :: stopUserControl\");\n            this._fPhiWidget.Stop();\n        }\n\n        return this;\n    }\n\n    /**\n     * Verifica que el entorno de ejecuciÃ³n actual estÃ¡ correctamente licenciado para el uso de las capacidades de detecciÃ³n del widget.\n     */\n    public isWidgetLicensed(): Observable<boolean> {\n        return this.http.get<any>(FPhiSelphIdWidgetService.licenseCheckUrl, { observe: \"response\" })\n            .pipe(map<HttpResponse<any>, boolean>((response: HttpResponse<any>) => response.status !== 403))\n    }\n\n    // #endregion\n}\n","import { FPhiSelphIdConstants } from \"./facephi-selphid-constants\";\n\n/**\n * Modelo con la informaciÃ³n de configuraciÃ³n del widget Selphi.\n */\nexport class FPhiSelphIdConfiguration {\n\n    // #region \"Propiedades\"\n\n    /**\n     * Referencia al elemento del DOM que actÃºa como contenedor del widget web.\n     */\n    public widgetContainer: any;\n\n    /**\n     * Idioma en que se mostrarÃ¡ la informaciÃ³n del widget.\n     */\n    public language: string;\n\n    /**\n     * Lista de densidades de pÃ­xeles en pantalla soportadas por el widget, de cara a mostrar las imÃ¡genes de recurso adecuadas a la pantalla actual.\n     */\n    public dpiList: Array<number>;\n\n    /**\n     * Modo de captura de documento. Controla el flujo de ejecuciÃ³n del widget.\n     */\n    public captureMode: number;\n\n    /**\n     * En caso de estar habilitado, el widget mostrarÃ¡ el documento capturado y solicitarÃ¡ confirmaciÃ³n al usuario.\n     */\n    public previewCapture: boolean;\n\n    /**\n     * Dimensiones fÃ­sicas (en mm) del documento a capturar.\n     */\n    public documentDimensions: FPhiSelphIdDocumentDimensions;\n\n    /**\n     * Umbral de tolerancia para dar por vÃ¡lida una captura de documento.\n     */\n    public qualityThreshold: number;\n\n    /**\n     * Factor de escalado sobre el Ã¡rea de recorte de la imagen del documento. La imagen devuelta se escala de acuerdo con este valor.\n     * Solamente se permiten valores mayores o iguales a 1.0.\n     */\n    public cropFactor: number;\n\n    /**\n     * En caso de estar habilitado, el widget se mostrarÃ¡ siempre en disposiciÃ³n horizontal, rotÃ¡ndose 90 grados en disposiciones verticales.\n     */\n    public forceLandscape: boolean;\n\n    /**\n     * Activa el modo de visualizaciÃ³n del drawer en pantallas de alta densidad.\n     */\n    public canvasHD: boolean;\n\n    /**\n     * Muestra un mensaje de advertencia de uso inicial tras la carga del widget.\n     */\n    public initialTip: boolean;\n\n    /**\n     * ResoluciÃ³n horizontal preferida de la cÃ¡mara (el widget intentarÃ¡ seleccionar la resoluciÃ³n mÃ¡s cercana).\n     */\n    public cameraWidth: number;\n\n    /**\n     * ResoluciÃ³n vertical preferida de la cÃ¡mara (el widget intentarÃ¡ seleccionar la resoluciÃ³n mÃ¡s cercana).\n     */\n    public cameraHeight: number;\n    \n    /**\n     * Identificador de la cÃ¡mara a utilizar para la realizaciÃ³n de la captura (si no se especifica, el widget seleccionarÃ¡ la cÃ¡mara trasera expuesta por defecto por el dispositivo).\n     */\n    public cameraId: string;\n\n    /**\n     * Tiempo disponible para la captura de una imagen de documento antes de emitirse un timeout (por defecto 10s). \n     * Valores <= 0.0 anulan la limitaciÃ³n de tiempo de captura.\n     */\n    public captureTimeout: number;\n\n    /**\n     * NÃºmero mÃ¡ximo de reintentos para obtener una captura vÃ¡lida de imagen de documento.\n     * Valores <= 0 establecen un nÃºmero infinito de reintentos.\n     */\n    public captureRetries: number;\n    \n    /**\n     * Sensibilidad de captura durante la detecciÃ³n de bordes del widget.\n     */\n    public captureSensibility: number;\n\n    /**\n     * Formato de las imÃ¡genes capturadas por el widget (MIME type).\n     */\n    public imageFormat: string;\n\n    /**\n     * Factor de calidad de las imÃ¡genes devueltas (rango 0.0 a 1.0). Ãnicamente aplicable cuando el formato de imagen se ha especificado como \"image/jpeg\".\n     */\n    public imageQuality: number;\n\n    /**\n     * Activa el modo de depuraciÃ³n del widget, en el que se mostrarÃ¡n mensajes informativos en la consola del navegador.\n     */\n    public debugMode: boolean = false;\n\n    // #endregion\n\n    // #region \"Eventos\"\n\n    /**\n     * Evento lanzado por el widget cuando se ha finalizado el proceso de carga e inicializaciÃ³n, tando del widget, como de los recursos asociados al mismo.\n     */\n    public onModuleLoaded: any;\n\n    /**\n     * Evento lanzado cuando el proceso de extracciÃ³n ha finalizado correctamente. Devuelve el resultado de la captura.\n     */\n    public onExtractionFinished: any;\n\n    /**\n     * Evento lanzado cuando el usuario cancela el proceso de extracciÃ³n.\n     */\n    public onUserCancelled: any;\n\n    /**\n     * Evento lanzado en caso de que se produzca un error interno del widget.\n     */\n    public onExceptionCaptured: any;\n\n    /**\n     * Evento lanzado si el proceso de captura excede el tiempo mÃ¡ximo disponible.\n     */\n    public onExtractionTimeout: any;\n\n    /**\n     * Evento lanzado tras cualquier acciÃ³n realizada por el usuario sobre la interfaz grÃ¡fica del widget o ante cualquier cambio de estado\n     * durante el proceso de captura.\n     */\n    public onTrackStatus: any;\n\n    // #endregion\n\n    // #region \"MÃ©todos pÃºblicos\"\n\n    /**\n     * Genera una instancia de \"FPhi.SelphID.ConfigurationManager\" con los datos de configuraciÃ³n de la instancia actual para inicializar el widget.\n     */\n    public getNativeConfiguration() {\n        const configurationManager = new window[\"FPhi\"].SelphID.ConfigurationManager();\n\n        // Propiedades de configuraciÃ³n\n        this.setNativeConfiguration(this.widgetContainer, configurationManager.setContainer, configurationManager);\n        this.setNativeConfiguration(this.language, configurationManager.setLanguage, configurationManager);\n        this.setNativeConfiguration(this.dpiList, configurationManager.setDpiList, configurationManager);\n        \n        this.setNativeConfiguration(this.captureMode, configurationManager.setMode, configurationManager);\n        this.setNativeConfiguration(this.previewCapture, configurationManager.setPreview, configurationManager);\n        this.setNativeConfiguration(this.documentDimensions, configurationManager.setDocumentDimensions, configurationManager);\n        \n        this.setNativeConfiguration(this.qualityThreshold, configurationManager.setQualityThreshold, configurationManager);\n        this.setNativeConfiguration(this.cropFactor, configurationManager.setCropFactor, configurationManager);\n        this.setNativeConfiguration(this.forceLandscape, configurationManager.setForceLandscape, configurationManager);\n        this.setNativeConfiguration(this.canvasHD, configurationManager.setCanvasHD, configurationManager);\n        this.setNativeConfiguration(this.initialTip, configurationManager.setInitialTip, configurationManager);\n        \n        this.setNativeConfiguration(this.cameraWidth, configurationManager.setCameraWidth, configurationManager);\n        this.setNativeConfiguration(this.cameraHeight, configurationManager.setCameraHeight, configurationManager);\n        this.setNativeConfiguration(this.cameraId, configurationManager.setCameraId, configurationManager);\n        \n        this.setNativeConfiguration(this.captureTimeout, configurationManager.setCaptureTimeout, configurationManager);\n        this.setNativeConfiguration(this.captureRetries, configurationManager.setCaptureRetries, configurationManager);\n        this.setNativeConfiguration(this.captureSensibility, configurationManager.setCaptureSensibility, configurationManager);\n        \n        this.setNativeConfiguration(this.imageFormat, configurationManager.setImageFormat, configurationManager);\n        this.setNativeConfiguration(this.imageQuality, configurationManager.setImageQuality, configurationManager);\n\n        // Eventos\n        this.setNativeConfiguration(this.onModuleLoaded, configurationManager.setOnModuleLoaded, configurationManager);\n        this.setNativeConfiguration(this.onExtractionFinished, configurationManager.setOnExtractionFinish, configurationManager);\n        this.setNativeConfiguration(this.onUserCancelled, configurationManager.setOnUserCancel, configurationManager);\n        this.setNativeConfiguration(this.onExceptionCaptured, configurationManager.setOnExceptionCaptured, configurationManager);\n        this.setNativeConfiguration(this.onExtractionTimeout, configurationManager.setOnExtractionTimeout, configurationManager);\n        this.setNativeConfiguration(this.onTrackStatus, configurationManager.setOnTrackStatus, configurationManager);\n\n        return configurationManager;\n    }\n\n    // #endregion\n\n    // #region \"MÃ©todos privados\"\n\n    private setNativeConfiguration(property, configurationSetterFunc, context: any = null) {\n        if (property === null || property === undefined)\n            return;\n\n        const setterFunc = context ? configurationSetterFunc.bind(context) : configurationSetterFunc;\n        setterFunc(property);\n    }\n\n    // #endregion\n}\n\n/**\n * Datos de dimensiones del documento capturado por el widget.\n */\nexport class FPhiSelphIdDocumentDimensions {\n    public x: number;\n    public y: number;\n    public width: number;\n    public height: number;\n}\n","import {\n    Component,\n    OnInit,\n    OnDestroy,\n    Input,\n    Output,\n    ViewChild,\n    ElementRef,\n    EventEmitter,\n    HostBinding\n} from \"@angular/core\";\n\nimport { FPhiSelphIdWidgetService } from \"../../services/fphi-selphid-widget.service\";\nimport { FPhiSelphIdConfiguration, FPhiSelphIdDocumentDimensions } from \"../../models/facephi-selphid-configuration\";\n\n@Component({\n    selector: \"facephi-selphid\",\n    templateUrl: \"./facephi-selphid.component.html\",\n    styleUrls: [\"./facephi-selphid.component.scss\"]\n})\nexport class FacePhiSelphIdComponent implements OnInit, OnDestroy {\n\n    // #region \"Atributos\"\n\n    private _cssClass: string = \"\";\n    private _widgetConfiguration: FPhiSelphIdConfiguration = new FPhiSelphIdConfiguration();\n\n    // #endregion\n\n    // #region \"Propiedades\"\n\n    @Input(\"class\")\n    @HostBinding(\"class\")\n    public get cssClass(): string {\n        return this._cssClass;\n    }\n\n    public set cssClass(value: string) {\n        if (value)\n            this._cssClass += ` ${value}`;\n    }\n\n    /**\n     * Anchura del componente.\n     */\n    @Input(\"width\")\n    public componentWidth: string;\n\n    public get widgetWidth(): string {\n        return this.componentWidth\n            ? typeof this.componentWidth === \"string\" && this.componentWidth.endsWith(\"%\")\n                ? this.componentWidth\n                : `${parseFloat(this.componentWidth)}px`\n            : \"100%\";\n    }\n\n    /**\n     * Altura del componente.\n     */\n    @Input(\"height\")\n    public componentHeight: string;\n\n    public get widgetHeight(): string {\n        return this.componentHeight\n            ? typeof this.componentWidth === \"string\" && this.componentHeight.endsWith(\"%\")\n                ? this.componentHeight\n                : `${parseFloat(this.componentHeight)}px`\n            : \"100%\";\n    }\n\n    /**\n     * Referencia interna al contenedor sobre el que se generarÃ¡ el widget web.\n     */\n    @ViewChild(\"widgetContainer\")\n    public readonly widgetContainer: ElementRef;\n\n    /**\n     * Clases CSS aplicadas sobre el contenedor del widget web.\n     */\n    @Input()\n    public containerCssClass: string;\n\n    // #region \"ConfiguraciÃ³n\"\n\n    /**\n     * Ruta en la que estÃ¡n localizados los recursos javascript nativos del widget web.\n     */\n    @Input()\n    public widgetLibPath = \"assets/lib/facephi/selphid\";\n\n    /**\n     * Flag para indicar si queremos que sea el componente el encargado de cargar e inicializar todos los recursos javascript del widget y borrarlos en su evento 'onDestroy'.\n     */\n    @Input()\n    public autoLoadLibResources: boolean = true;\n\n    /**\n     * Idioma en que se mostrarÃ¡ la informaciÃ³n del widget.\n     */\n    @Input()\n    public set language(value: string) {\n        this._widgetConfiguration.language = value;\n    }\n\n    public get language(): string { return this._widgetConfiguration.language; }\n\n    /**\n     * Lista de densidades de pÃ­xeles en pantalla soportadas por el widget, de cara a mostrar las imÃ¡genes de recurso adecuadas a la pantalla actual.\n     */\n    @Input()\n    public set dpiList(value: Array<number>) {\n        this._widgetConfiguration.dpiList = value;\n    }\n\n    public get dpiList(): Array<number> { return this._widgetConfiguration.dpiList; }\n\n    /**\n     * Modo de captura de documento. Controla el flujo de ejecuciÃ³n del widget.\n     */\n    @Input()\n    public set captureMode(value: number) {\n        this._widgetConfiguration.captureMode = value;\n    }\n\n    public get captureMode(): number { return this._widgetConfiguration.captureMode; }\n\n    /**\n     * En caso de estar habilitado, el widget mostrarÃ¡ el documento capturado y solicitarÃ¡ confirmaciÃ³n al usuario.\n     */\n    @Input()\n    public set previewCapture(value: boolean) {\n        this._widgetConfiguration.previewCapture = value;\n    }\n\n    public get previewCapture(): boolean { return this._widgetConfiguration.previewCapture; }\n\n    /**\n     * Dimensiones fÃ­sicas (en mm) del documento a capturar.\n     */\n    @Input()\n    public set documentDimensions(value: FPhiSelphIdDocumentDimensions) {\n        this._widgetConfiguration.documentDimensions = value;\n    }\n\n    public get documentDimensions(): FPhiSelphIdDocumentDimensions { return this._widgetConfiguration.documentDimensions; }\n\n    /**\n     * Umbral de tolerancia para dar por vÃ¡lida una captura de documento.\n     */\n    @Input()\n    public set qualityThreshold(value: number) {\n        this._widgetConfiguration.qualityThreshold = value;\n    }\n\n    public get qualityThreshold(): number { return this._widgetConfiguration.qualityThreshold; }\n\n    /**\n     * Factor de escalado sobre el Ã¡rea de recorte de la imagen del documento. La imagen devuelta se escala de acuerdo con este valor.\n     * Solamente se permiten valores mayores o iguales a 1.0.\n     */\n    @Input()\n    public set cropFactor(value: number) {\n        this._widgetConfiguration.cropFactor = value;\n    }\n\n    public get cropFactor(): number { return this._widgetConfiguration.cropFactor; }\n\n    /**\n     * En caso de estar habilitado, el widget se mostrarÃ¡ siempre en disposiciÃ³n horizontal, rotÃ¡ndose 90 grados en disposiciones verticales.\n     */\n    @Input()\n    public set forceLandscape(value: boolean) {\n        this._widgetConfiguration.forceLandscape = value;\n    }\n\n    public get forceLandscape(): boolean { return this._widgetConfiguration.forceLandscape; }\n\n    /**\n     * Activa el modo de visualizaciÃ³n del drawer en pantallas de alta densidad.\n     */\n    @Input()\n    public set canvasHD(value: boolean) {\n        this._widgetConfiguration.canvasHD = value;\n    }\n\n    public get canvasHD(): boolean { return this._widgetConfiguration.canvasHD; }\n\n    /**\n     * Muestra un mensaje de advertencia de uso inicial tras la carga del widget.\n     */\n    @Input()\n    public set initialTip(value: boolean) {\n        this._widgetConfiguration.initialTip = value;\n    }\n\n    public get initialTip(): boolean { return this._widgetConfiguration.initialTip; }\n\n    /**\n     * ResoluciÃ³n horizontal preferida de la cÃ¡mara (el widget intentarÃ¡ seleccionar la resoluciÃ³n mÃ¡s cercana).\n     */\n    @Input()\n    public set cameraWidth(value: number) {\n        this._widgetConfiguration.cameraWidth = value;\n    }\n\n    public get cameraWidth(): number { return this._widgetConfiguration.cameraWidth; }\n\n    /**\n     * ResoluciÃ³n vertical preferida de la cÃ¡mara (el widget intentarÃ¡ seleccionar la resoluciÃ³n mÃ¡s cercana).\n     */\n    @Input()\n    public set cameraHeight(value: number) {\n        this._widgetConfiguration.cameraHeight = value;\n    }\n\n    public get cameraHeight(): number { return this._widgetConfiguration.cameraHeight; }\n\n    /**\n     * Identificador de la cÃ¡mara a utilizar para la realizaciÃ³n de la captura (si no se especifica, el widget seleccionarÃ¡ la cÃ¡mara trasera expuesta por defecto por el dispositivo).\n     */\n    @Input()\n    public set cameraId(value: string) {\n        this._widgetConfiguration.cameraId = value;\n    }\n\n    public get cameraId(): string { return this._widgetConfiguration.cameraId; }\n\n    /**\n     * Tiempo disponible para la captura de una imagen de documento antes de emitirse un timeout (por defecto 10s). \n     * Valores <= 0.0 anulan la limitaciÃ³n de tiempo de captura.\n     */\n    @Input()\n    public set captureTimeout(value: number) {\n        this._widgetConfiguration.captureTimeout = value;\n    }\n\n    public get captureTimeout(): number { return this._widgetConfiguration.captureTimeout; }\n\n    /**\n     * NÃºmero mÃ¡ximo de reintentos para obtener una captura vÃ¡lida de imagen de documento.\n     * Valores <= 0 establecen un nÃºmero infinito de reintentos.\n     */\n    @Input()\n    public set captureRetries(value: number) {\n        this._widgetConfiguration.captureRetries = value;\n    }\n\n    public get captureRetries(): number { return this._widgetConfiguration.captureRetries; }\n\n    \n    /**\n     * Sensibilidad de captura durante la detecciÃ³n de bordes del widget.\n     */\n    @Input()\n    public set captureSensibility(value: number) {\n        this._widgetConfiguration.captureSensibility = value;\n    }\n\n    public get captureSensibility(): number { return this._widgetConfiguration.captureSensibility; }\n\n    /**\n     * Formato de las imÃ¡genes capturadas por el widget (MIME type).\n     */\n    @Input()\n    public set imageFormat(value: string) {\n        this._widgetConfiguration.imageFormat = value;\n    }\n\n    public get imageFormat(): string { return this._widgetConfiguration.imageFormat; }\n\n    /**\n     * Factor de calidad de las imÃ¡genes devueltas (rango 0.0 a 1.0). Ãnicamente aplicable cuando el formato de imagen se ha especificado como \"image/jpeg\".\n     */\n    @Input()\n    public set imageQuality(value: number) {\n        this._widgetConfiguration.imageQuality = value;\n    }\n\n    public get imageQuality(): number { return this._widgetConfiguration.imageQuality; }\n\n    /**\n     * Activa el modo de depuraciÃ³n del widget, en el que se mostrarÃ¡n mensajes informativos en la consola del navegador.\n     */\n    @Input()\n    public set debugMode(value: boolean) {\n        this._widgetConfiguration.debugMode = value;\n    }\n\n    public get debugMode(): boolean { return this._widgetConfiguration.debugMode; }\n\n    // #endregion\n\n    // #region \"Eventos\"\n\n    /**\n     * Evento lanzado cuando los recursos del widget se han cargado correctamente.\n     */\n    @Output()\n    public onComponentLoaded = new EventEmitter<any>();\n\n    /**\n     * Evento lanzado por el widget cuando se ha finalizado el proceso de carga e inicializaciÃ³n, tando del widget, como de los recursos asociados al mismo.\n     */\n    @Output()\n    public onModuleLoaded = new EventEmitter<any>();\n\n    /**\n     * Evento lanzado cuando el proceso de extracciÃ³n ha finalizado correctamente. Devuelve el resultado de la captura.\n     */\n    @Output()\n    public onExtractionFinished = new EventEmitter<any>();\n\n    /**\n     * Evento lanzado cuando el usuario cancela el proceso de extracciÃ³n.\n     */\n    @Output()\n    public onUserCancelled = new EventEmitter<any>();\n\n    /**\n     * Evento lanzado en caso de que se produzca un error interno del widget.\n     */\n    @Output()\n    public onExceptionCaptured = new EventEmitter<any>();\n\n    /**\n     * Evento lanzado si el proceso de captura excede el tiempo mÃ¡ximo disponible.\n     */\n    @Output()\n    public onExtractionTimeout = new EventEmitter<any>();\n\n    /**\n     * Evento lanzado tras cualquier acciÃ³n realizada por el usuario sobre la interfaz grÃ¡fica del widget o ante cualquier cambio de estado\n     * durante el proceso de captura.\n     */\n    @Output()\n    public onTrackStatus = new EventEmitter<any>();\n\n    // #endregion\n\n    // #endregion\n\n    // #region \"Constructores\"\n\n    constructor(\n        private widgetService: FPhiSelphIdWidgetService\n    ) { }\n\n    ngOnInit() {\n        //console.warn(`>>>> [facephi-selphid] ngOnInit { autoLoadLibResources: ${this.autoLoadLibResources} }`, this.widgetContainer.nativeElement);\n        //console.log(`widgetContainer.offsetWidth: ${(this.widgetContainer.nativeElement as any).offsetWidth}`);\n        //console.log(`widgetContainer.offsetHeight: ${(this.widgetContainer.nativeElement as any).offsetHeight}`);\n        this._widgetConfiguration.widgetContainer = this.widgetContainer.nativeElement;\n        this.setupEvents();\n\n        const widgetInitFunc = () => {\n            //console.warn(\">>>> [facephi-selphid]  CONTROL LOADED!!\");\n            this.onComponentLoaded.emit();\n\n            this.widgetService\n                .createUserControl(this._widgetConfiguration)\n                .startUserControl();\n        };\n\n        if (this.autoLoadLibResources) {\n            this.widgetService\n                .loadControl(this.widgetLibPath)\n                .subscribe(widgetInitFunc);\n        } else\n            widgetInitFunc();\n    }\n\n    ngOnDestroy() {\n        if (this.autoLoadLibResources) {\n            this.widgetService\n                .stopUserControl()\n                .removeControl();\n        }\n    }\n\n    // #endregion\n\n    // #region \"MÃ©todos privados\"\n\n    private setupEvents(): FacePhiSelphIdComponent {\n        this._widgetConfiguration.onModuleLoaded = eventData => { this.onModuleLoaded.emit(eventData); };\n        this._widgetConfiguration.onExtractionFinished = extractionResult => { this.onExtractionFinished.emit(extractionResult); };\n        this._widgetConfiguration.onUserCancelled = () => { this.onUserCancelled.emit(); };\n        this._widgetConfiguration.onExceptionCaptured = exceptionResult => { this.onExceptionCaptured.emit(exceptionResult); };\n        this._widgetConfiguration.onExtractionTimeout = () => { this.onExtractionTimeout.emit(); };\n        this._widgetConfiguration.onTrackStatus = eventData => { this.onTrackStatus.emit(eventData); };\n\n        return this;\n    }\n\n    // #endregion\n\n}\n","export class FPhiSelphIdConstants {\n    /**\n     * Modo de funcionamiento del widget a la hora de realizar la captura del documento.\n     */\n    public static readonly CaptureMode = {\n        /**\n         * Captura Ãºnicamente el frente del documento.\n         */\n        Front: 0,\n\n        /**\n         * Captura Ãºnicamente el dorso del documento.\n         */\n        Back: 1,\n\n        /**\n         * Realiza una captura de ambas partes del documento.\n         */\n        Full: 2\n    }\n\n    /**\n     * Tipo de excepciÃ³n producida durante la ejecuciÃ³n del widget.\n     */\n    public static readonly ExceptionType = {\n        CameraError: 0,\n        ExtractorError: 1,\n        ControlNotInitializedError: 2,\n        ImageCropResizeError: 3,\n        UnexpectedCaptureError: 4\n    }\n\n    /**\n     * Niveles de sensibilidad de captura en las capacidades de detecciÃ³n de bordes del widget.\n     */\n    public static readonly CaptureSensibility = {\n        Low: 0,\n        Normal: 1,\n        High: 2,\n        Auto: 3\n    }\n\n    /**\n     * Tipo de acciÃ³n que se produce en la interacciÃ³n del usuario con el widget.\n     */\n    public static readonly TrackStatus = {\n        ChangeState: 0,\n        Tap: 1\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { FacePhiSelphIdComponent } from \"./components/facephi-selphid/facephi-selphid.component\";\n\n\n@NgModule({\n    declarations: [\n        FacePhiSelphIdComponent\n    ],\n    imports: [\n        CommonModule,\n        HttpClientModule\n    ],\n    exports: [\n        FacePhiSelphIdComponent\n    ]\n})\nexport class FacePhiSelphIdModule {}\n"],"names":[],"mappings":"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"}
