{"version":3,"file":"facephi-selphi.js.map","sources":["ng://facephi-selphi/lib/models/facephi-selphi-configuration.ts","ng://facephi-selphi/lib/services/helpers/rxjs-helper.ts","ng://facephi-selphi/lib/services/fphi-selphi-widget.service.ts","ng://facephi-selphi/lib/components/facephi-selphi/facephi-selphi.component.ts","ng://facephi-selphi/lib/models/facephi-selphi-constants.ts","ng://facephi-selphi/lib/facephi-selphi.module.ts"],"sourcesContent":["import { FPhiSelphiConstants } from \"./facephi-selphi-constants\";\n\n/**\n * Modelo con la informaciÃ³n de configuraciÃ³n del widget Selphi.\n */\nexport class FPhiSelphiConfiguration {\n\n    // #region \"Propiedades\"\n\n    /**\n     * Referencia al elemento del DOM que actÃºa como contenedor del widget web.\n     */\n    public widgetContainer: any;\n\n    /**\n     * Ruta donde estÃ¡ ubicado el fichero widget.xml y el resto de recursos personalizables del widget.\n     */\n    public resourcesPath: any;\n\n    /**\n     * Ruta donde estÃ¡ ubicado el fichero graph.xml.\n     */\n    public graphPath: any;\n\n    /**\n     * Idioma en que se mostrarÃ¡ la informaciÃ³n del widget.\n     */\n    public language: string;\n\n    /**\n     * Lista de densidades de pÃ­xeles en pantalla soportadas por el widget, de cara a mostrar las imÃ¡genes de recurso adecuadas a la pantalla actual.\n     */\n    public dpiList: Array<number>;\n\n    /**\n     * ResoluciÃ³n horizontal preferida de la cÃ¡mara (el widget intentarÃ¡ seleccionar la resoluciÃ³n mÃ¡s cercana).\n     */\n    public cameraWidth: number;\n\n    /**\n     * ResoluciÃ³n vertical preferida de la cÃ¡mara (el widget intentarÃ¡ seleccionar la resoluciÃ³n mÃ¡s cercana).\n     */\n    public cameraHeight: number;\n\n    /**\n     * RotaciÃ³n de la cÃ¡mara.\n     */\n    public cameraRotation: any;\n\n    /**\n     * Selector de tipo de cÃ¡mara a utilizar para realizar la captura (frontal o trasera).\n     */\n    public cameraType: any;\n\n    /**\n     * Indica si el tutorial estÃ¡ disponible en el widget.\n     */\n    public tutorial: boolean;\n\n    /**\n     * Modo de extracciÃ³n o flujo de ejecuciÃ³n utilizado por el widget.\n     */\n    public extractionMode: any;\n\n    /**\n     * Modos de verificaciÃ³n de prueba de vida utilizado por el widget.\n     */\n    public livenessMode: any;\n\n    /**\n     * \n     */\n    public livenessPrecision: number;\n\n    /**\n     * \n     */\n    public livenessMoveInitialError: number;\n\n    /**\n     * \n     */\n    public livenessMoveInfoTime: number;\n\n    /**\n     * Indica si el widget permite la interacciÃ³n con el usuario.\n     */\n    public interactible: boolean;\n\n    /**\n     * Tiempo de registro en segundos.\n     */\n    public registerTime: number;\n\n    /**\n     * Tiempo de autenticaciÃ³n en segundos.\n     */\n    public authenticateTime: number;\n\n    /**\n     * Formato de las imÃ¡genes capturadas por el widget (MIME type).\n     */\n    public imageFormat: string;\n\n    /**\n     * Factor de calidad de las imÃ¡genes devueltas (rango 0.0 a 1.0). Ãnicamente aplicable cuando el formato de imagen se ha especificado como \"image/jpeg\".\n     */\n    public imageQuality: number;\n\n    /**\n     * \n     */\n    public logImages: boolean;\n\n    /**\n     * Factor de recorte de las imÃ¡genes devueltas por el widget.\n     */\n    public cropFactor: number;\n\n    /**\n     * Indica si el widget debe recortar las imÃ¡genes capturadas, o no.\n     */\n    public cropImage: boolean;\n\n    /**\n     * Formato de salida de la informaciÃ³n de template generada por el widget.\n     */\n    public templateFormat: number;\n\n    /**\n     * Activa la fase de estabilizaciÃ³n previa a la captura. Por defecto, la estabilizaciÃ³n estarÃ¡ desactivada.\n     * En caso de haber seleccionado LivenessMode==Move, este parÃ¡metro no se tendrÃ¡ en cuenta y siempre se realizarÃ¡ fase de estabilizado.\n     */\n    public stabilizationStage: boolean;\n\n    /**\n     * Indica si el widget debe grabar la sesiÃ³n del usuario en video.\n     */\n    public videoRecord: boolean;\n\n    /**\n     * Frecuencia de grabaciÃ³n (en frames por segundo).\n     */\n    public videoRecordRate: number;\n\n    /**\n     * Factor de escalado aplicado sobre las capturas realizadas para la generaciÃ³n del video.\n     * Toma valores porcentuales de 0.0 a 1.0 (que equivaldrÃ­a a una escala del 100% de resoluciÃ³n de cÃ¡mara seleccionada).\n     */\n    public videoRecordScale: number;\n\n    /**\n     * Tipo de salida del video generado. Los posibles valores se tomarÃ¡n del enumerado \"FPhi.Selphi.RecordType\".\n     */\n    public videoRecordType: any;\n\n    /**\n     * Activa el modo de depuraciÃ³n del widget, en el que se mostrarÃ¡n mensajes informativos en la consola del navegador.\n     */\n    public debugMode: boolean;\n\n    // #endregion\n\n    // #region \"Eventos\"\n\n    /**\n     * Evento lanzado por el widget cuando se ha finalizado el proceso de carga e inicializaciÃ³n, tando del widget, como de los recursos asociados al mismo.\n     */\n    public onModuleLoaded: any;\n\n    /**\n     * Evento lanzado durante los ciclos de estabilizaciÃ³n de la imagen para la correcta realizaciÃ³n de la captura.\n     * @callback evt {{ detail: FPhiSelphiConstants.SampleDiagnostic }}\n     */\n    public onStabilizing: any;\n\n    /**\n     * Evento lanzado cuando el proceso de extracciÃ³n ha finalizado correctamente. Devuelve el resultado de la captura.\n     * @callback evt {{ template, images, timeStamp, templateRaw, livenessMoveFails, sunGlassesScore, livenessMoveHistory, livenessMoveStabilizedHistory, livenessMoveStabilizedStatus }}\n     */\n    public onExtractionFinish: any;\n\n    /**\n     * Evento lanzado cuando el usuario cancela el proceso de extracciÃ³n.\n     */\n    public onUserCancel: any;\n\n    /**\n     * Evento lanzado en caso de que se produzca un error interno del widget.\n     * @callback evt {{ detail: { message: string, exceptionType: FPhiSelphiConstants.ExceptionType } }}\n     */\n    public onExceptionCaptured: any;\n\n    /**\n     * Evento lanzado cuando el proceso de verificaciÃ³n de autenticidad por prueba de vida falla.\n     * @callback evt {{ detail: { template, images, timeStamp, templateRaw, livenessMoveFails, sunGlassesScore, livenessMoveHistory, livenessMoveStabilizedHistory, livenessMoveStabilizedStatus } }}\n     */\n    public onLivenessError: any;\n\n    /**\n     * Evento lanzado cuando el proceso de verificaciÃ³n de autenticidad por prueba de vida falla y el usuario pulsa el botÃ³n de la pantalla de error mostrada.\n     */\n    public onLivenessErrorButtonClick: any;\n\n    /**\n     * Evento lanzado si el proceso de captura excede el tiempo mÃ¡ximo disponible.\n     * @callback evt {{ detail: { template, images, timeStamp, templateRaw, livenessMoveFails, sunGlassesScore, livenessMoveHistory, livenessMoveStabilizedHistory, livenessMoveStabilizedStatus } }}\n     */\n    public onExtractionTimeout: any;\n\n    /**\n     * Evento lanzado cuando el proceso de captura excede el tiempo mÃ¡ximo disponible y el usuario pulsa el botÃ³n de la pantalla de error mostrada.\n     */\n    public onTimeoutErrorButtonClick: any;\n\n    /**\n     * Evento lanzado tras cualquier acciÃ³n realizada por el usuario sobre la interfaz grÃ¡fica del widget o ante cualquier cambio de estado\n     * durante el proceso de captura.\n     */\n    public onTrackStatus: any;\n\n    // #endregion\n\n    // #region \"MÃ©todos pÃºblicos\"\n\n    /**\n     * Genera una instancia de \"FPhi.Selphi.ConfigurationManager\" con los datos de configuraciÃ³n de la instancia actual para inicializar el widget.\n     */\n    public getNativeConfiguration() {\n        const configurationManager = new window[\"FPhi\"].Selphi.ConfigurationManager();\n\n        // Propiedades de configuraciÃ³n\n        this.setNativeConfiguration(this.widgetContainer, configurationManager.setContainer, configurationManager);\n        this.setNativeConfiguration(this.resourcesPath, configurationManager.setResourcesPath, configurationManager);\n        this.setNativeConfiguration(this.graphPath, configurationManager.setGraphPath, configurationManager);\n        this.setNativeConfiguration(this.language, configurationManager.setLanguage, configurationManager);\n        this.setNativeConfiguration(this.dpiList, configurationManager.setDpiList, configurationManager);\n\n        this.setNativeConfiguration(this.tryParseInt(this.cameraWidth), configurationManager.setCameraWidth, configurationManager);\n        this.setNativeConfiguration(this.tryParseInt(this.cameraHeight), configurationManager.setCameraHeight, configurationManager);\n        this.setNativeConfiguration(this.tryParseInt(this.cameraRotation), configurationManager.setCameraRotation, configurationManager);\n        this.setNativeConfiguration(this.tryParseInt(this.cameraType), configurationManager.setCameraType, configurationManager);\n\n        this.setNativeConfiguration(this.tutorial, configurationManager.setTutorial, configurationManager);\n        this.setNativeConfiguration(this.tryParseInt(this.extractionMode), configurationManager.setMode, configurationManager);\n\n        this.setNativeConfiguration(this.tryParseInt(this.livenessMode), configurationManager.setLivenessMode, configurationManager);\n        this.setNativeConfiguration(this.tryParseInt(this.livenessPrecision), configurationManager.setLivenessPrecision, configurationManager);\n        this.setNativeConfiguration(this.tryParseInt(this.livenessMoveInitialError), configurationManager.setLivenessMoveInitialError, configurationManager);\n        this.setNativeConfiguration(this.tryParseFloat(this.livenessMoveInfoTime), configurationManager.setLivenessMoveInfoTime, configurationManager);\n\n        this.setNativeConfiguration(this.interactible, configurationManager.setInteractible, configurationManager);\n        this.setNativeConfiguration(this.tryParseFloat(this.registerTime), configurationManager.setRegisterTime, configurationManager);\n        this.setNativeConfiguration(this.tryParseFloat(this.authenticateTime), configurationManager.setAuthenticateTime, configurationManager);\n\n        this.setNativeConfiguration(this.imageFormat, configurationManager.setImageFormat, configurationManager);\n        this.setNativeConfiguration(this.tryParseFloat(this.imageQuality), configurationManager.setImageQuality, configurationManager);\n        this.setNativeConfiguration(this.logImages, configurationManager.setLogImages, configurationManager);\n\n        this.setNativeConfiguration(this.tryParseFloat(this.cropFactor), configurationManager.setCropFactor, configurationManager);\n        this.setNativeConfiguration(this.cropImage, configurationManager.setCropImage, configurationManager);\n\n        this.setNativeConfiguration(this.tryParseInt(this.templateFormat), configurationManager.setTemplateFormat, configurationManager);\n        this.setNativeConfiguration(this.stabilizationStage, configurationManager.setStabilizationStage, configurationManager);\n\n        this.setNativeConfiguration(this.videoRecord, configurationManager.setVideoRecord, configurationManager);\n        this.setNativeConfiguration(this.tryParseInt(this.videoRecordRate), configurationManager.setVideoRecordRate, configurationManager);\n        this.setNativeConfiguration(this.tryParseFloat(this.videoRecordScale), configurationManager.setVideoRecordScale, configurationManager);\n        this.setNativeConfiguration(this.tryParseInt(this.videoRecordType), configurationManager.setVideoRecordType, configurationManager);\n\n        // Eventos\n        this.setNativeConfiguration(this.onModuleLoaded, configurationManager.setOnModuleLoaded, configurationManager);\n        this.setNativeConfiguration(this.onStabilizing, configurationManager.setOnStabilizing, configurationManager);\n        this.setNativeConfiguration(this.onExtractionFinish, configurationManager.setOnExtractionFinish, configurationManager);\n        this.setNativeConfiguration(this.onUserCancel, configurationManager.setOnUserCancel, configurationManager);\n        this.setNativeConfiguration(this.onExceptionCaptured, configurationManager.setOnExceptionCaptured, configurationManager);\n        this.setNativeConfiguration(this.onLivenessError, configurationManager.setOnLivenessError, configurationManager);\n        this.setNativeConfiguration(this.onLivenessErrorButtonClick, configurationManager.setOnLivenessErrorButtonClick, configurationManager);\n        this.setNativeConfiguration(this.onExtractionTimeout, configurationManager.setOnExtractionTimeout, configurationManager);\n        this.setNativeConfiguration(this.onTimeoutErrorButtonClick, configurationManager.setOnTimeoutErrorButtonClick, configurationManager);\n        this.setNativeConfiguration(this.onTrackStatus, configurationManager.setOnTrackStatus, configurationManager);\n\n        return configurationManager;\n    }\n\n    // #endregion\n\n    // #region \"MÃ©todos privados\"\n\n    private setNativeConfiguration(property, configurationSetterFunc, context: any = null) {\n        if (property === null || property === undefined)\n            return;\n\n        const setterFunc = context ? configurationSetterFunc.bind(context) : configurationSetterFunc;\n        setterFunc(property);\n    }\n\n    private tryParseInt(value: any) {\n        var intValue = parseInt(value);\n        return !isNaN(intValue) ? intValue : value;\n    }\n\n    private tryParseFloat(value: any) {\n        var floatValue = parseFloat(value);\n        return !isNaN(floatValue) ? floatValue : value;\n    }\n\n    // #endregion\n}\n","import { timer } from \"rxjs/index\";\n\nexport class RxjsHelper {\n\n    /**\n     * Encapsula una rutina de chequeo de una condiciÃ³n hasta que Ã©sta se cumpla.\n     * @param pollTime Intervalo de chequeo (en ms).\n     * @param evalFunc FunciÃ³n para evaluar la condiciÃ³n deseada.\n     * @param successFunc FunciÃ³n a invocar cuando la condiciÃ³n se cumpla.\n     * @param delayTime Tiempo de retardo para iniciar el proceso de chequeo. Por defecto 0ms.\n     */\n    public static poll(pollTime: number,\n                       evalFunc: any,\n                       successFunc: any,\n                       delayTime: number = 0) {\n        const subscription = timer(delayTime, pollTime)\n            .subscribe(\n                () => {\n                    if (!evalFunc())\n                        return;\n\n                    subscription.unsubscribe();\n                    successFunc();\n                }\n            );\n    }\n}\n","import { Injectable, Inject } from \"@angular/core\";\nimport { Renderer2, RendererFactory2 } from \"@angular/core\";\nimport { DOCUMENT } from \"@angular/common\";\n\nimport { Observable } from \"rxjs\";\nimport { RxjsHelper } from \"./helpers/rxjs-helper\";\n\nimport { FPhiSelphiConfiguration } from \"../models/facephi-selphi-configuration\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class FPhiSelphiWidgetService {\n\n    // #region \"Atributos\"\n\n    private _renderer: Renderer2;\n\n    private _assetsBasePath: string;\n    private _fPhiWidgetConfiguration: FPhiSelphiConfiguration;\n    private _fPhiWidget: any;\n\n    // #endregion\n\n    // #region \"Propiedades\"\n\n    private get fPhiSelphiNamespace() { return window[\"FPhi\"] && window[\"FPhi\"].Selphi ? window[\"FPhi\"].Selphi : undefined; }\n\n    private set fPhiSelphiNamespace(value: any) {\n        if (window[\"FPhi\"])\n            window[\"FPhi\"].Selphi = value;\n    }\n\n    private get fPhiWidgetScriptPath(): string { return `${this._assetsBasePath}/FPhi.Widget.wasm.js`; }\n\n    // #endregion\n\n    // #region \"Constructores\"\n\n    constructor(\n        @Inject(DOCUMENT) private document: any,\n        private rendererFactory: RendererFactory2\n    ) {\n        this._renderer = this.rendererFactory.createRenderer(null, null);\n    }\n\n    // #endregion\n\n    // #region \"MÃ©todos pÃºblicos\"\n\n    /**\n     * Realiza la carga dinÃ¡mica del recurso javascript del widget web.\n     * @param basePath Ruta base de la carpeta de los ficheros del widget.\n     */\n    public loadControl(basePath: string): Observable<FPhiSelphiWidgetService> {\n        //console.log(`>>>> FPhiSelphiWidgetService :: loadControl --> basePath: ${basePath}`);\n        this._assetsBasePath = basePath;\n\n        const fPhiWidgetScript = this._renderer.createElement(\"script\");\n        this._renderer.setAttribute(fPhiWidgetScript, \"src\", this.fPhiWidgetScriptPath);\n        this._renderer.setAttribute(fPhiWidgetScript, \"type\", \"text/javascript\");\n        this._renderer.appendChild(this.document.body, fPhiWidgetScript);\n\n        return new Observable<FPhiSelphiWidgetService>(subscriber => {\n            RxjsHelper.poll(5,\n                () => this.fPhiSelphiNamespace !== null && this.fPhiSelphiNamespace !== undefined && this.fPhiSelphiNamespace.Widget !== null && this.fPhiSelphiNamespace.Widget !== undefined,\n                () => subscriber.next(this)\n            );\n        });\n    }\n\n    /**\n     * Elimina los recursos javascript del widget incluidos en el DOM de la pÃ¡gina.\n     */\n    public removeControl(): FPhiSelphiWidgetService {\n        if (!this._assetsBasePath)\n            return this;\n\n        //console.warn(`>>>> FPhiSelphiWidgetService :: removeControl(\"${this._assetsBasePath}\")`);\n        delete this._fPhiWidget;\n        delete this._fPhiWidgetConfiguration;\n        delete this.fPhiSelphiNamespace;\n\n        this._fPhiWidget = undefined;\n        this._fPhiWidgetConfiguration = undefined;\n        this.fPhiSelphiNamespace = undefined;\n\n        this.document\n            .querySelectorAll(`script[src*=\"${this._assetsBasePath}\"]`)\n            .forEach(element => { element.parentNode.removeChild(element); });\n\n        this.document\n            .querySelectorAll(\"style#FPhi_Widget_style\")\n            .forEach(element => { element.parentNode.removeChild(element); });\n\n        //console.warn(`>>>> FPhiSelphiWidgetService :: Control removed`);\n        return this;\n    }\n\n    /**\n     * Crea una instancia del widget web nativo con los datos de configuraciÃ³n indicados.\n     * @param config Datos de configuraciÃ³n del widget.\n     */\n    public createUserControl(config: FPhiSelphiConfiguration): FPhiSelphiWidgetService {\n        //console.warn(\">>>> FPhiSelphiWidgetService :: createUserControl\", config, config.getNativeConfiguration());\n\n        this._fPhiWidgetConfiguration = config;\n        this._fPhiWidget = new this.fPhiSelphiNamespace.Widget(config.getNativeConfiguration());\n        //console.log(this._fPhiWidget);\n\n        if (this._fPhiWidgetConfiguration.debugMode !== null && this._fPhiWidgetConfiguration.debugMode !== undefined)\n            this._fPhiWidget.debug = this._fPhiWidgetConfiguration.debugMode;\n\n        //console.log(this._fPhiWidget);\n        return this;\n    }\n\n    /**\n     * Inicia el widget.\n     */\n    public startUserControl(): FPhiSelphiWidgetService {\n        if (this._fPhiWidget)\n            this._fPhiWidget.Start();\n\n        return this;\n    }\n\n    /**\n     * Detiene la ejecuciÃ³n del widget.\n     */\n    public stopUserControl(): FPhiSelphiWidgetService {\n        if (this._fPhiWidget)\n            this._fPhiWidget.Stop();\n\n        return this;\n    }\n\n    // #endregion\n}\n","import {\n    Component,\n    OnInit,\n    OnDestroy,\n    Input,\n    Output,\n    ViewChild,\n    ElementRef,\n    EventEmitter,\n    HostBinding\n} from \"@angular/core\";\n\nimport { FPhiSelphiConfiguration } from \"../../models/facephi-selphi-configuration\";\nimport { FPhiSelphiWidgetService } from \"../../services/fphi-selphi-widget.service\";\n\n\n@Component({\n    selector: \"facephi-selphi\",\n    templateUrl: \"./facephi-selphi.component.html\",\n    styleUrls: [\"./facephi-selphi.component.scss\"]\n})\nexport class FacePhiSelphiComponent implements OnInit, OnDestroy {\n\n    // #region \"Atributos\"\n\n    private _cssClass: string = \"\";\n    private _widgetConfiguration: FPhiSelphiConfiguration = new FPhiSelphiConfiguration();\n\n    // #endregion\n\n    // #region \"Propiedades\"\n\n    @Input(\"class\")\n    @HostBinding(\"class\")\n    public get cssClass(): string {\n        return this._cssClass;\n    }\n\n    public set cssClass(value: string) {\n        if (value)\n            this._cssClass += ` ${value}`;\n    }\n\n    /**\n     * Anchura del componente.\n     */\n    @Input(\"width\")\n    public componentWidth: any;\n\n    public get widgetWidth(): any {\n        return this.componentWidth\n            ? typeof this.componentWidth === \"string\" && this.componentWidth.endsWith(\"%\")\n                ? this.componentWidth\n                : parseFloat(this.componentWidth) !== NaN\n                    ? `${parseFloat(this.componentWidth)}px`\n                    : this.componentWidth\n            : \"100%\";\n    }\n\n    /**\n     * Altura del componente.\n     */\n    @Input(\"height\")\n    public componentHeight: any;\n\n    public get widgetHeight(): any {\n        return this.componentHeight\n            ? typeof this.componentHeight === \"string\" && this.componentHeight.endsWith(\"%\")\n                ? this.componentHeight\n                : parseFloat(this.componentHeight) !== NaN\n                    ? `${parseFloat(this.componentHeight)}px`\n                    : this.componentHeight\n            : \"100%\";\n    }\n\n    /**\n     * Referencia interna al contenedor sobre el que se generarÃ¡ el widget web.\n     */\n    @ViewChild(\"widgetContainer\")\n    public readonly widgetContainer: ElementRef;\n\n    /**\n     * Clases CSS aplicadas sobre el contenedor del widget web.\n     */\n    @Input()\n    public containerCssClass: string;\n\n    // #region \"ConfiguraciÃ³n\"\n\n    /**\n     * Ruta en la que estÃ¡n localizados los recursos javascript nativos del widget web.\n     */\n    @Input()\n    public widgetLibPath = \"assets/lib/facephi/selphi\";\n\n    /**\n     * Flag para indicar si queremos que sea el componente el encargado de cargar e inicializar todos los recursos javascript del widget y borrarlos en su evento 'onDestroy'.\n     */\n    @Input()\n    public autoLoadLibResources: boolean = true;\n\n    /**\n     * Ruta donde estÃ¡ ubicado el fichero widget.xml y el resto de recursos personalizables del widget.\n     */\n    @Input()\n    public set resourcesPath(value: string) {\n        this._widgetConfiguration.resourcesPath = value;\n    }\n\n    public get resourcesPath(): string { return this._widgetConfiguration.resourcesPath; }\n\n    /**\n     * Ruta donde estÃ¡ ubicado el fichero graph.xml.\n     */\n    @Input()\n    public set graphPath(value: string) {\n        this._widgetConfiguration.graphPath = value;\n    }\n\n    public get graphPath(): string { return this._widgetConfiguration.graphPath; }\n\n    /**\n     * Idioma en que se mostrarÃ¡ la informaciÃ³n del widget.\n     */\n    @Input()\n    public set language(value: string) {\n        this._widgetConfiguration.language = value;\n    }\n\n    public get language(): string { return this._widgetConfiguration.language; }\n\n    /**\n     * Lista de densidades de pÃ­xeles en pantalla soportadas por el widget, de cara a mostrar las imÃ¡genes de recurso adecuadas a la pantalla actual.\n     */\n    @Input()\n    public set dpiList(value: Array<number>) {\n        this._widgetConfiguration.dpiList = value;\n    }\n\n    public get dpiList(): Array<number> { return this._widgetConfiguration.dpiList; }\n\n    /**\n     * ResoluciÃ³n horizontal preferida de la cÃ¡mara (el widget intentarÃ¡ seleccionar la resoluciÃ³n mÃ¡s cercana).\n     */\n    @Input()\n    public set cameraWidth(value: number) {\n        this._widgetConfiguration.cameraWidth = value;\n    }\n\n    public get cameraWidth(): number { return this._widgetConfiguration.cameraWidth; }\n\n    /**\n     * ResoluciÃ³n vertical preferida de la cÃ¡mara (el widget intentarÃ¡ seleccionar la resoluciÃ³n mÃ¡s cercana).\n     */\n    @Input()\n    public set cameraHeight(value: number) {\n        this._widgetConfiguration.cameraHeight = value;\n    }\n\n    public get cameraHeight(): number { return this._widgetConfiguration.cameraHeight; }\n\n    /**\n     * RotaciÃ³n de la cÃ¡mara.\n     */\n    @Input()\n    public set cameraRotation(value: any) {\n        this._widgetConfiguration.cameraRotation = value;\n    }\n\n    public get cameraRotation(): any { return this._widgetConfiguration.cameraRotation; }\n\n    /**\n     * Selector de tipo de cÃ¡mara a utilizar para realizar la captura (frontal o trasera).\n     */\n    @Input()\n    public set cameraType(value: any) {\n        this._widgetConfiguration.cameraType = value;\n    }\n\n    public get cameraType(): any { return this._widgetConfiguration.cameraType; }\n\n    /**\n     * Indica si el tutorial estÃ¡ disponible en el widget.\n     */\n    @Input()\n    public set tutorial(value: boolean) {\n        this._widgetConfiguration.tutorial = value;\n    }\n\n    public get tutorial(): boolean { return this._widgetConfiguration.tutorial; }\n\n    /**\n     * Modo de extracciÃ³n o flujo de ejecuciÃ³n utilizado por el widget.\n     */\n    @Input()\n    public set extractionMode(value: any) {\n        this._widgetConfiguration.extractionMode = value;\n    }\n\n    public get extractionMode(): any { return this._widgetConfiguration.extractionMode; }\n\n    /**\n     * Modos de verificaciÃ³n de prueba de vida utilizado por el widget.\n     */\n    @Input()\n    public set livenessMode(value: any) {\n        this._widgetConfiguration.livenessMode = value;\n    }\n\n    public get livenessMode(): any { return this._widgetConfiguration.livenessMode; }\n\n    /**\n     * \n     */\n    @Input()\n    public set livenessPrecision(value: number) {\n        this._widgetConfiguration.livenessPrecision = value;\n    }\n\n    public get livenessPrecision(): number { return this._widgetConfiguration.livenessPrecision; }\n\n    /**\n     * \n     */\n    @Input()\n    public set livenessMoveInitialError(value: number) {\n        this._widgetConfiguration.livenessMoveInitialError = value;\n    }\n\n    public get livenessMoveInitialError(): number { return this._widgetConfiguration.livenessMoveInitialError; }\n\n    /**\n     * \n     */\n    @Input()\n    public set livenessMoveInfoTime(value: number) {\n        this._widgetConfiguration.livenessMoveInfoTime = value;\n    }\n\n    public get livenessMoveInfoTime(): number { return this._widgetConfiguration.livenessMoveInfoTime; }\n\n    /**\n     * Indica si el widget permite la interacciÃ³n con el usuario.\n     */\n    @Input()\n    public set interactible(value: boolean) {\n        this._widgetConfiguration.interactible = value;\n    }\n\n    public get interactible(): boolean { return this._widgetConfiguration.interactible; }\n\n    /**\n     * Tiempo de registro en segundos.\n     */\n    @Input()\n    public set registerTime(value: number) {\n        this._widgetConfiguration.registerTime = value;\n    }\n\n    public get registerTime(): number { return this._widgetConfiguration.registerTime; }\n\n    /**\n     * Tiempo de autenticaciÃ³n en segundos.\n     */\n    @Input()\n    public set authenticateTime(value: number) {\n        this._widgetConfiguration.authenticateTime = value;\n    }\n\n    public get authenticateTime(): number { return this._widgetConfiguration.authenticateTime; }\n\n    /**\n     * Formato de las imÃ¡genes capturadas por el widget (MIME type).\n     */\n    @Input()\n    public set imageFormat(value: string) {\n        this._widgetConfiguration.imageFormat = value;\n    }\n\n    public get imageFormat(): string { return this._widgetConfiguration.imageFormat; }\n\n    /**\n     * Factor de calidad de las imÃ¡genes devueltas (rango 0.0 a 1.0). Ãnicamente aplicable cuando el formato de imagen se ha especificado como \"image/jpeg\".\n     */\n    @Input()\n    public set imageQuality(value: number) {\n        this._widgetConfiguration.imageQuality = value;\n    }\n\n    public get imageQuality(): number { return this._widgetConfiguration.imageQuality; }\n\n    /**\n     * \n     */\n    @Input()\n    public set logImages(value: boolean) {\n        this._widgetConfiguration.logImages = value;\n    }\n\n    public get logImages(): boolean { return this._widgetConfiguration.logImages; }\n\n    /**\n     * Factor de recorte de las imÃ¡genes devueltas por el widget.\n     */\n    @Input()\n    public set cropFactor(value: number) {\n        this._widgetConfiguration.cropFactor = value;\n    }\n\n    public get cropFactor(): number { return this._widgetConfiguration.cropFactor; }\n\n    /**\n     * Indica si el widget debe recortar las imÃ¡genes capturadas, o no.\n     */\n    @Input()\n    public set cropImage(value: boolean) {\n        this._widgetConfiguration.cropImage = value;\n    }\n\n    public get cropImage(): boolean { return this._widgetConfiguration.cropImage; }\n\n    /**\n     * Formato de salida de la informaciÃ³n de template generada por el widget.\n     */\n    @Input()\n    public set templateFormat(value: number) {\n        this._widgetConfiguration.templateFormat = value;\n    }\n\n    public get templateFormat(): number { return this._widgetConfiguration.templateFormat; }\n\n    /**\n     * Activa la fase de estabilizaciÃ³n previa a la captura. Por defecto, la estabilizaciÃ³n estarÃ¡ desactivada.\n     * En caso de haber seleccionado LivenessMode==Move, este parÃ¡metro no se tendrÃ¡ en cuenta y siempre se realizarÃ¡ fase de estabilizado.\n     */\n    @Input()\n    public set stabilizationStage(value: boolean) {\n        this._widgetConfiguration.stabilizationStage = value;\n    }\n\n    public get stabilizationStage(): boolean { return this._widgetConfiguration.stabilizationStage; }\n\n    /**\n     * Indica si el widget debe grabar la sesiÃ³n del usuario en video.\n     */\n    @Input()\n    public set videoRecord(value: boolean) {\n        this._widgetConfiguration.videoRecord = value;\n    }\n\n    public get videoRecord(): boolean { return this._widgetConfiguration.videoRecord; }\n\n    /**\n     * Frecuencia de grabaciÃ³n (en frames por segundo).\n     */\n    @Input()\n    public set videoRecordRate(value: number) {\n        this._widgetConfiguration.videoRecordRate = value;\n    }\n\n    public get videoRecordRate(): number { return this._widgetConfiguration.videoRecordRate; }\n\n    /**\n     * Factor de escalado aplicado sobre las capturas realizadas para la generaciÃ³n del video.\n     * Toma valores porcentuales de 0.0 a 1.0 (que equivaldrÃ­a a una escala del 100% de resoluciÃ³n de cÃ¡mara seleccionada).\n     */\n    @Input()\n    public set videoRecordScale(value: number) {\n        this._widgetConfiguration.videoRecordScale = value;\n    }\n\n    public get videoRecordScale(): number { return this._widgetConfiguration.videoRecordScale; }\n\n    /**\n     * Tipo de salida del video generado. Los posibles valores se tomarÃ¡n del enumerado \"FPhi.Selphi.RecordType\".\n     */\n    @Input()\n    public set videoRecordType(value: any) {\n        this._widgetConfiguration.videoRecordType = value;\n    }\n\n    public get videoRecordType(): any { return this._widgetConfiguration.videoRecordType; }\n\n    /**\n     * Activa el modo de depuraciÃ³n del widget, en el que se mostrarÃ¡n mensajes informativos en la consola del navegador.\n     */\n    @Input()\n    public set debugMode(value: boolean) {\n        this._widgetConfiguration.debugMode = value;\n    }\n\n    public get debugMode(): boolean { return this._widgetConfiguration.debugMode; }\n\n    // #endregion\n\n    // #region \"Eventos\"\n\n    /**\n     * Evento lanzado cuando los recursos del widget se han cargado correctamente.\n     */\n    @Output()\n    public onComponentLoaded = new EventEmitter<any>();\n\n    /**\n     * Evento lanzado por el widget cuando se ha finalizado el proceso de carga e inicializaciÃ³n, tando del widget, como de los recursos asociados al mismo.\n     */\n    @Output()\n    public onModuleLoaded = new EventEmitter<any>();\n\n    /**\n     * Evento lanzado durante los ciclos de estabilizaciÃ³n de la imagen para la correcta realizaciÃ³n de la captura.\n     */\n    @Output()\n    public onStabilizing = new EventEmitter<any>();\n\n    /**\n     * Evento lanzado cuando el proceso de extracciÃ³n ha finalizado correctamente. Devuelve el resultado de la captura.\n     */\n    @Output()\n    public onExtractionFinish = new EventEmitter<any>();\n\n    /**\n     * Evento lanzado cuando el usuario cancela el proceso de extracciÃ³n.\n     */\n    @Output()\n    public onUserCancel = new EventEmitter<any>();\n\n    /**\n     * Evento lanzado en caso de que se produzca un error interno del widget.\n     */\n    @Output()\n    public onExceptionCaptured = new EventEmitter<any>();\n\n    /**\n     * Evento lanzado cuando el proceso de verificaciÃ³n de autenticidad por prueba de vida falla.\n     */\n    @Output()\n    public onLivenessError = new EventEmitter<any>();\n\n    /**\n     * Evento lanzado cuando el proceso de verificaciÃ³n de autenticidad por prueba de vida falla y el usuario pulsa el botÃ³n de la pantalla de error mostrada.\n     */\n    @Output()\n    public onLivenessErrorButtonClick = new EventEmitter<any>();\n\n    /**\n     * Evento lanzado si el proceso de captura excede el tiempo mÃ¡ximo disponible.\n     */\n    @Output()\n    public onExtractionTimeout = new EventEmitter<any>();\n\n    /**\n     * Evento lanzado cuando el proceso de captura excede el tiempo mÃ¡ximo disponible y el usuario pulsa el botÃ³n de la pantalla de error mostrada.\n     */\n    @Output()\n    public onTimeoutErrorButtonClick = new EventEmitter<any>();\n\n    /**\n     * Evento lanzado tras cualquier acciÃ³n realizada por el usuario sobre la interfaz grÃ¡fica del widget o ante cualquier cambio de estado\n     * durante el proceso de captura.\n     */\n    @Output()\n    public onTrackStatus = new EventEmitter<any>();\n\n    // #endregion\n\n    // #endregion\n\n    // #region \"Constructores\"\n\n    constructor(\n        private widgetService: FPhiSelphiWidgetService\n    ) { }\n\n    ngOnInit() {\n        //console.warn(`>>>> [facephi-selphi] ngOnInit { autoLoadLibResources: ${this.autoLoadLibResources} }`, this.widgetContainer.nativeElement);\n        //console.log(`widgetContainer.offsetWidth: ${(this.widgetContainer.nativeElement as any).offsetWidth}`);\n        //console.log(`widgetContainer.offsetHeight: ${(this.widgetContainer.nativeElement as any).offsetHeight}`);\n\n        this._widgetConfiguration.widgetContainer = this.widgetContainer.nativeElement;\n        this.setupEvents();\n\n        const widgetInitFunc = () => {\n            //console.warn(\">>>> [facephi-selphi]  CONTROL LOADED!!\");\n            this.onComponentLoaded.emit();\n\n            this.widgetService\n                .createUserControl(this._widgetConfiguration)\n                .startUserControl();\n        };\n\n        if (this.autoLoadLibResources) {\n            this.widgetService\n                .loadControl(this.widgetLibPath)\n                .subscribe(widgetInitFunc);\n        } else\n            widgetInitFunc();\n    }\n\n    ngOnDestroy() {\n        //console.warn(\">>>> [facephi-selphi] ngOnDestroy\");\n        if (this.autoLoadLibResources) {\n            this.widgetService\n                .stopUserControl()\n                .removeControl();\n        }\n    }\n\n    // #endregion\n\n    // #region \"MÃ©todos privados\"\n\n    private setupEvents(): FacePhiSelphiComponent {\n        this._widgetConfiguration.onModuleLoaded = eventData => { this.onModuleLoaded.emit(eventData); };\n        this._widgetConfiguration.onStabilizing = stabilizingResult => { this.onStabilizing.emit(stabilizingResult); };\n        this._widgetConfiguration.onExtractionFinish = extractionResult => { this.onExtractionFinish.emit(extractionResult); };\n        this._widgetConfiguration.onUserCancel = () => { this.onUserCancel.emit(); };\n        this._widgetConfiguration.onExceptionCaptured = exceptionResult => { this.onExceptionCaptured.emit(exceptionResult); };\n        this._widgetConfiguration.onLivenessError = livenessErrorResult => { this.onLivenessError.emit(livenessErrorResult); };\n        this._widgetConfiguration.onLivenessErrorButtonClick = () => { this.onLivenessErrorButtonClick.emit(); };\n        this._widgetConfiguration.onExtractionTimeout = extractionTimeoutResult => { this.onExtractionTimeout.emit(extractionTimeoutResult); };\n        this._widgetConfiguration.onTimeoutErrorButtonClick = () => { this.onTimeoutErrorButtonClick.emit(); };\n        this._widgetConfiguration.onTrackStatus = eventData => { this.onTrackStatus.emit(eventData); };\n\n        return this;\n    }\n\n    // #endregion\n\n}\n","export class FPhiSelphiConstants {\n\n    /**\n     * Modos de rotaciÃ³n de la cÃ¡mara para la realizaciÃ³n de la captura.\n     */\n    public static readonly CameraRotation = {\n        None: 0,\n        Deg90: 1,\n        Deg180: 2,\n        Deg270: 3\n    }\n\n    /**\n     * Modos de extracciÃ³n o flujos de ejecuciÃ³n disponibles en el widget.\n     */\n    public static readonly ExtractionMode = {\n        /**\n         * Registro de usuarios.\n         */\n        Register: 0,\n\n        /**\n         * AutenticaciÃ³n de usuarios.\n         */\n        Authenticate: 1\n    }\n\n    /**\n     * Modos de verificaciÃ³n de prueba de vida disponibles.\n     */\n    public static readonly LivenessMode = {\n        /**\n         * VerificaciÃ³n de prueba de vida desactivada.\n         */\n        None: 0,\n\n        /**\n         * Prueba de vida mediante parpadeo.\n         */\n        Blink: 1,\n\n        /**\n         * Prueba de vida mediante movimiento.\n         */\n        Move: 2,\n\n        /**\n         * Prueba de vida pasivo.\n         */\n        Passive: 3\n    }\n\n    /**\n     * Tipo de excepciÃ³n producida durante la ejecuciÃ³n del widget.\n     */\n    public static readonly ExceptionType = {\n        CameraError: 0,\n        ExtractorError: 1,\n        ControlNotInitializedError: 2,\n        ImageCropResizeError: 3,\n        UnexpectedCaptureError: 4\n    }\n\n    public static readonly SampleDiagnostic = {\n        Ok: 0,\n        FaceNotFound: 1,\n        RightEyeNotFound: 2,\n        LeftEyeNotFound: 3,\n        EyesNotFound: 4,\n        FaceTooFar: 5,\n        FaceTooClose: 6,\n        TooCloseToWindowSide: 7,\n        AngleExceeded: 8,\n        QualityCheckFailed: 9,\n        NotRated: 10\n    }\n\n    public static readonly FinalDiagnostic = {\n        InsufficientValidSamples: 0,\n        TemplateCreationInProgress: 1,\n        TemplateCreated: 2\n    }\n\n    public static readonly LivenessDiagnostic = {\n        NotRated: 0,\n        PhotoDetected: 1,\n        LivenessDetected: 2,\n        Unsuccess: 3,\n        UnsuccessLowPerformance: 4,\n        UnsuccessGlasses: 5,\n        UnsuccessLight: 6,\n        UnsuccessNoMovement: 7,\n        UnsuccessWrongDirection: 8,\n        UnsuccessTooFar: 9\n    }\n\n    /**\n     * Formato de salida de la informaciÃ³n de template generada por el widget.\n     */\n    public static readonly TemplateFormat = {\n        ByteArray: 0,\n        Base64: 1\n    }\n\n    /**\n     * Formato de salida de la grabaciÃ³n del video de sesiÃ³n del usuario. Tipo de proceso utilizado para la generaciÃ³n del video.\n     */\n    public static readonly RecorderType = {\n        Gif: 0,\n        Remote: 1\n    }\n\n    /**\n     * Tipo de cÃ¡mara a utilizar para la captura del selfie.\n     */\n    public static readonly CameraType = {\n        Front: 0,\n        Back: 1\n    }\n\n    /**\n     * Tipo de acciÃ³n que se produce en la interacciÃ³n del usuario con el widget.\n     */\n    public static readonly TrackStatus = {\n        ChangeState: 0,\n        Tap: 1\n    }\n\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { FacePhiSelphiComponent } from \"./components/facephi-selphi/facephi-selphi.component\";\n\n\n@NgModule({\n    declarations: [\n        FacePhiSelphiComponent\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        FacePhiSelphiComponent\n    ]\n})\nexport class FacePhiSelphiModule {}\n"],"names":[],"mappings":"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"}
